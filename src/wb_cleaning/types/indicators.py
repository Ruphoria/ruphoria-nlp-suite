# generated by datamodel-codegen:
#   filename:  sample_indicators.json
#   timestamp: 2022-05-08T04:31:25+00:00
# modified manually for the descriptions

from __future__ import annotations

from datetime import date
from pydantic import BaseModel, Field
from typing import Any, List, Optional


class AliasItem(BaseModel):
    alias: str = Field(None, description="An alternative name for the indicator or series being documented.")


class IndicatorItem(BaseModel):
    code: str
    label: str
    uri: str


class AcronymItem(BaseModel):
    acronym: str = Field(..., description='An acronym referenced in the series metadata (e.g. "GDP").')
    expansion: str = Field(..., description='The expansion of the acronym, i.e. the full name or title that it represents (e.g., "Gross Domestic Product").')
    occurence: int = Field(None, description="This numeric element can be used to indicate the number of times the acronym is mentioned in the metadata. The element will rarely be used.")


class LicenseItem(BaseModel):
    name: str = Field(None, description='The name of the license, e.g. "Creative Commons Attribution 4.0 International license (CC-BY 4.0)".')
    uri: str = Field(None, description='The URL of a website where the licensed is described in detail, for example "https://creativecommons.org/licenses/by/4.0/".')


class GeographicUnit(BaseModel):
    name: str = Field(None